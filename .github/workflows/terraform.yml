name: Terraform Workflow

on:
  workflow_dispatch:
    inputs:
      proceed_with_destroy:
        description: 'Do you want to proceed with terraform destroy?'
        required: true
        type: choice
        options:
          - 'yes'
          - 'no'
        default: 'no'
      confirm_destroy:
        description: 'Are you sure you want to proceed with terraform destroy?'
        required: true
        type: choice
        options:
          - 'yes'
          - 'no'
        default: 'no'

jobs:
  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    environment: development

    steps:
      # Step to check out the repository code
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      # Step to set up AWS credentials
      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step to initialize Terraform
      - name: 'Terraform Init'
        run: terraform init

      # Step to apply Terraform-managed infrastructure
      - name: 'Terraform Apply'
        run: terraform apply -auto-approve

  terraform_destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    needs: terraform_apply  # This job depends on the successful completion of the terraform_apply job

    steps:
      # Step to check out the repository code
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      # Step to set up AWS credentials
      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: your_region

      # Step to check initial user input for proceeding with destroy
      - name: Check initial user input
        run: |
          if [ "${{ github.event.inputs.proceed_with_destroy }}" != "yes" ]; then
            echo "User chose not to proceed with terraform destroy."
            exit 0
          fi
          echo "User chose to proceed with terraform destroy."

      # Step to confirm the user's decision to proceed with destroy
      - name: Confirm Terraform Destroy
        run: |
          if [ "${{ github.event.inputs.confirm_destroy }}" != "yes" ]; then
            echo "User chose not to confirm terraform destroy."
            exit 0
          fi
          echo "User confirmed to proceed with terraform destroy."

      # Step to wait for 4 minutes if user confirms
      - name: Wait for 4 minutes
        if: ${{ github.event.inputs.confirm_destroy }} == 'yes'
        run: sleep 240

      # Step to destroy Terraform-managed infrastructure if user confirms
      - name: 'Terraform Destroy'
        if: ${{ github.event.inputs.confirm_destroy }} == 'yes'
        run: terraform destroy -auto-approve

      # Step to provide an exit message if the user does not proceed or confirm
      - name: 'Exit Message'
        if: ${{ github.event.inputs.proceed_with_destroy }} != 'yes' || ${{ github.event.inputs.confirm_destroy }} != 'yes'
        run: echo "OK Bye"